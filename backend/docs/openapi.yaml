openapi: "3.0.3"
info:
  version: "1.0.0"
  title: "Universal Media Organizer API"
servers:
  - url: http://localhost:8000
    description: "Local server"
tags:
  - name: "user"
    description: "User management"
  - name: "media"
    description: "Media management"
  - name: "comment"
    description: "Comment management"
  - name: "track"
    description: "Track management"
paths:
  /user/register:
    post:
      tags:
        - "user"
      summary: "Register user"
      requestBody:
        description: "User credentials"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegister"
      responses:
        "200":
          description: "User registered"
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer xxxx.yyyy.zzzz
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["success"]
                  data:
                    $ref: "#/components/schemas/UserInfo"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "409":
          description: "User already exists"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
  /user/login:
    post:
      tags:
        - "user"
      summary: "Login user"
      requestBody:
        description: "User credentials"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        "200":
          description: "User logged in"
          headers:
            Authorization:
              schema:
                type: string
                example: Bearer xxxx.yyyy.zzzz
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["success"]
                  data:
                    $ref: "#/components/schemas/UserInfo"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "403":
          description: "Invalid credentials"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
  /user/logout:
    post:
      tags:
        - "user"
      summary: "Logout user"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "User logged out"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["success"]
                  data:
                    type: "string"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
  /user/edit:
    put:
      tags:
        - "user"
      summary: "Edit user"
      security:
        - bearerAuth: []
      requestBody:
        description: "User information to edit"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                fullname:
                  type: "string"
                avatar:
                  type: "string"
      responses:
        "200":
          description: "User info edited"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["success"]
                  data:
                    $ref: "#/components/schemas/UserView"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "404":
          description: "Track not found"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
  /user/load/{login}:
    get:
      tags:
        - "user"
      summary: "Get user info"
      security:
        - bearerAuth: []
      parameters:
        - name: "login"
          in: "path"
          description: "User login"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "User info"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["success"]
                  data:
                    $ref: "#/components/schemas/UserInfo"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "404":
          description: "User not found"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
  /media/load/{id}:
    get:
      tags:
        - "media"
      summary: "Get media info"
      parameters:
        - name: "id"
          in: "path"
          description: "Media ID"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "Media info"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["success"]
                  data:
                    $ref: "#/components/schemas/Media"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "404":
          description: "Media not found"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
  /media/add:
    post:
      tags:
        - "media"
      summary: "Add media"
      security:
        - bearerAuth: []
      requestBody:
        description: "Media information"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                title:
                  type: "string"
                description:
                  type: "string"
                image:
                  type: "string"
                category:
                  type: "string"
                release_year:
                  type: "integer"
                  format: "int64"
                duration:
                  type: "integer"
                genres:
                  type: "array"
                  items:
                    type: "string"
      responses:
        "200":
          description: "Media added"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["success"]
                  data:
                    $ref: "#/components/schemas/Media"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
  /media/edit:
    put:
      tags:
        - "media"
      summary: "Edit media"
      security:
        - bearerAuth: []
      requestBody:
        description: "Media information to edit"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                id:
                  type: "integer"
                  format: "int64"
                title:
                  type: "string"
                description:
                  type: "string"
                image:
                  type: "string"
                category:
                  type: "string"
                release_year:
                  type: "integer"
                  format: "int64"
                duration:
                  type: "integer"
                genres:
                  type: "array"
                  items:
                    type: "string"
      responses:
        "200":
          description: "Media edited"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["success"]
                  data:
                    $ref: "#/components/schemas/Media"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "404":
          description: "Track not found"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
  /media/delete/{id}:
    delete:
      tags:
        - "media"
      summary: "Delete media"
      security:
        - bearerAuth: []
      parameters:
        - name: "id"
          in: "path"
          description: "Media ID"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "Media deleted"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["success"]
                  data:
                    type: "string"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "404":
          description: "Media not found"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
  /search:
    post:
      tags:
        - "media"
      summary: "Search media"
      requestBody:
        description: "Search filter"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Filter"
      responses:
        "200":
          description: "Media found"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["success"]
                  data:
                    type: "array"
                    items:
                      $ref: '#/components/schemas/MediaResult'
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
  /comment/add:
    post:
      tags:
        - "comment"
      summary: "Add comment"
      security:
        - bearerAuth: []
      requestBody:
        description: "Comment information"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                media_id:
                  type: "integer"
                  format: "int64"
                content:
                  type: "string"
      responses:
        "200":
          description: "Comment added"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["success"]
                  data:
                    $ref: "#/components/schemas/Comment"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
  /comment/edit:
    put:
      tags:
        - "comment"
      summary: "Edit comment"
      security:
        - bearerAuth: []
      requestBody:
        description: "Comment information to edit"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                id:
                  type: "integer"
                  format: "int64"
                content:
                  type: "string"
      responses:
        "200":
          description: "Comment edited"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["success"]
                  data:
                    $ref: "#/components/schemas/Comment"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "404":
          description: "Track not found"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
  /comment/delete/{id}:
    delete:
      tags:
        - "comment"
      summary: "Delete comment"
      security:
        - bearerAuth: []
      parameters:
        - name: "id"
          in: "path"
          description: "Comment ID"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "Comment deleted"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["success"]
                  data:
                    type: "string"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "404":
          description: "Comment not found"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
  /track/add:
    post:
      tags:
        - "track"
      summary: "Add track"
      security:
        - bearerAuth: []
      requestBody:
        description: "Track information"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                media_id:
                  type: "integer"
                  format: "int64"
                rating:
                  type: "integer"
                track_status:
                  type: "string"
      responses:
        "200":
          description: "Track added"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["success"]
                  data:
                    $ref: "#/components/schemas/MediaTrack"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
  /track/edit:
    put:
      tags:
        - "track"
      summary: "Edit track"
      security:
        - bearerAuth: []
      requestBody:
        description: "Track information to edit"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                media_id:
                  type: "integer"
                  format: "int64"
                rating:
                  type: "integer"
                track_status:
                  type: "string"
      responses:
        "200":
          description: "Track edited"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["success"]
                  data:
                    $ref: "#/components/schemas/MediaTrack"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "404":
          description: "Track not found"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
  /track/delete/{id}:
    delete:
      tags:
        - "track"
      summary: "Delete track"
      security:
        - bearerAuth: []
      parameters:
        - name: "id"
          in: "path"
          description: "Track ID"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "Track deleted"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["success"]
                  data:
                    type: "string"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
        "404":
          description: "Track not found"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  status:
                    type: "string"
                    enum: ["error"]
                  message:
                    type: "string"
components:
  schemas:
    UserRegister:
      type: "object"
      properties:
        login:
          type: "string"
        password:
          type: "string"
        fullname:
          type: "string"
        email:
          type: "string"
    UserLogin:
      type: "object"
      properties:
        login:
          type: "string"
        password:
          type: "string"
    UserView:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        login:
          type: "string"
        fullname:
          type: "string"
        avatar:
          type: "string"
        created_at:
          type: "string"
          format: "date-time"
        last_login_at:
          type: "string"
          format: "date-time"
    UserInfo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        login:
          type: "string"
        fullname:
          type: "string"
        avatar:
          type: "string"
        created_at:
          type: "string"
          format: "date-time"
        last_login_at:
          type: "string"
          format: "date-time"
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/MediaTrack'
    Media:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        description:
          type: "string"
        image:
          type: "string"
        category:
          type: "string"
        cumulative_rating:
          type: "integer"
        number_of_ratings:
          type: "integer"
        number_of_tracks:
          type: "integer"
        release_year:
          type: "integer"
        duration:
          type: "integer"
        genres:
          type: "array"
          items:
            type: "string"
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    MediaResult:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        image:
          type: "string"
        rating:
          type: "integer"
    Comment:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        media_id:
          type: "integer"
          format: "int64"
        sender_id:
          type: "integer"
          format: "int64"
        content:
          type: "string"
        created_at:
          type: "string"
          format: "date-time"
        updated_at:
          type: "string"
          format: "date-time"
        sender:
          $ref: '#/components/schemas/UserView'
    MediaTrack:
      type: "object"
      properties:
        user_id:
          type: "integer"
          format: "int64"
        media_id:
          type: "integer"
          format: "int64"
        rating:
          type: "integer"
        track_status:
          type: "string"
        media_title:
          type: "string"
    Filter:
      type: "object"
      properties:
        title:
          type: "string"
        category:
          type: "string"
        genres:
          type: "array"
          items:
            type: "string"
        year_from:
          type: "integer"
          format: "int64"
        year_to:
          type: "integer"
          format: "int64"
        duration_from:
          type: "integer"
        duration_to:
          type: "integer"
        rating_from:
          type: "integer"
        rating_to:
          type: "integer"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
